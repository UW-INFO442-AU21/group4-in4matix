{"version":3,"sources":["logo.svg","MenuBar.js","Type-1.js","Type-2.js","Type-3.js","Type-4.js","Type-5.js","App.js","reportWebVitals.js","index.js"],"names":["MenuBar","Navbar","bg","variant","src","alt","Container","Brand","href","Nav","className","to","id","activeClassName","Link","Dropdown","Toggle","Menu","Item","Type1","Type2","Type3","Type4","Type5","App","class","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAAe,I,oDCmEAA,MA7Df,WACE,OACE,8BACE,eAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAA1B,cACA,qBAAKC,IAAK,gBAAiBC,IAAI,SAC7B,eAACC,EAAA,EAAD,WACE,cAACL,EAAA,EAAOM,MAAR,CAAcC,KAAK,QAAnB,2BACA,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,cAAC,IAAD,CAASC,GAAG,IAAID,UAAU,WAAWE,GAAG,SAASC,gBAAiB,aAAlE,kBACA,cAACJ,EAAA,EAAIK,KAAL,CAAUN,KAAK,QAAf,kBACA,cAACC,EAAA,EAAIK,KAAL,CAAUN,KAAK,WAAf,qBAIA,eAACO,EAAA,EAAD,WACE,cAACA,EAAA,EAASC,OAAV,CAAiBJ,GAAG,gCAAgCT,QAAQ,YAA5D,wCAIA,eAACY,EAAA,EAASE,KAAV,CAAed,QAAQ,OAAvB,UACE,cAACY,EAAA,EAASG,KAAV,UACE,cAAC,IAAD,CAASP,GAAG,UAAUD,UAAU,WAAWE,GAAG,SAASC,gBAAiB,aAAxE,6BAEF,cAACE,EAAA,EAASG,KAAV,UACE,cAAC,IAAD,CAASP,GAAG,UAAUD,UAAU,WAAWE,GAAG,SAASC,gBAAiB,aAAxE,yBAEF,cAACE,EAAA,EAASG,KAAV,UACE,cAAC,IAAD,CAASP,GAAG,UAAUD,UAAU,WAAWE,GAAG,SAASC,gBAAiB,aAAxE,sBAEF,cAACE,EAAA,EAASG,KAAV,UACE,cAAC,IAAD,CAASP,GAAG,UAAUD,UAAU,WAAWE,GAAG,SAASC,gBAAiB,aAAxE,uBAEF,cAACE,EAAA,EAASG,KAAV,UACE,cAAC,IAAD,CAASP,GAAG,UAAUD,UAAU,WAAWE,GAAG,SAASC,gBAAiB,aAAxE,wC,eCjCHM,MANf,WACE,OACE,oFCIWC,MANf,WACE,OACE,gFCIWC,MANf,WACE,OACE,6ECIWC,MANf,WACE,OACE,8ECIWC,MANf,WACE,OACE,6EC8DWC,MArDf,WACE,OACE,gCACE,cAAC,EAAD,IACA,gCACE,mDAGA,ucAIF,gCACE,+CAGA,gWAGA,mBAAGC,MAAM,SAAT,oDAKF,eAAC,IAAD,WACE,eAAC,IAAD,CAAOC,KAAK,UAAZ,cAAuB,cAAC,EAAD,IAAvB,OACA,eAAC,IAAD,CAAOA,KAAK,UAAZ,cAAuB,cAAC,EAAD,IAAvB,OACA,eAAC,IAAD,CAAOA,KAAK,UAAZ,cAAuB,cAAC,EAAD,IAAvB,OACA,eAAC,IAAD,CAAOA,KAAK,UAAZ,cAAuB,cAAC,EAAD,IAAvB,OACA,eAAC,IAAD,CAAOA,KAAK,UAAZ,cAAuB,cAAC,EAAD,IAAvB,cC5BOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.30cf3b26.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { NavLink } from 'react-router-dom';\n\nfunction MenuBar() {\n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\"> { /*change to incredibles scheme */ }\n      <img src={'jack-jack.png'} alt=\"logo\" />\n        <Container>\n          <Navbar.Brand href=\"#home\">Be Incredible</Navbar.Brand>\n          <Nav className=\"me-auto\">\n            <NavLink to=\"/\" className=\"nav-link\" id=\"nav-li\" activeClassName={\"activeLink\"}>Home</NavLink>\n            <Nav.Link href=\"#quiz\">Quiz</Nav.Link>\n            <Nav.Link href=\"#results\">Results</Nav.Link>\n            {/* the nav link is replaced by a dropdown to navigate imposter types */}\n            {/* <Nav.Link >Types of Imposter Syndrome</Nav.Link> */}\n\n            <Dropdown>\n              <Dropdown.Toggle id=\"dropdown-button-dark-example1\" variant=\"secondary\">\n                Types of Imposter Syndrome\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu variant=\"dark\">\n                <Dropdown.Item>\n                  <NavLink to=\"/type-1\" className=\"nav-link\" id=\"nav-li\" activeClassName={\"activeLink\"}>Perfectionist</NavLink>\n                </Dropdown.Item>\n                <Dropdown.Item>\n                  <NavLink to=\"/type-2\" className=\"nav-link\" id=\"nav-li\" activeClassName={\"activeLink\"}>Superhero</NavLink>\n                </Dropdown.Item>\n                <Dropdown.Item>\n                  <NavLink to=\"/type-3\" className=\"nav-link\" id=\"nav-li\" activeClassName={\"activeLink\"}>Genius</NavLink>\n                </Dropdown.Item>\n                <Dropdown.Item>\n                  <NavLink to=\"/type-4\" className=\"nav-link\" id=\"nav-li\" activeClassName={\"activeLink\"}>Soloist</NavLink>\n                </Dropdown.Item>\n                <Dropdown.Item>\n                  <NavLink to=\"/type-5\" className=\"nav-link\" id=\"nav-li\" activeClassName={\"activeLink\"}>Expert</NavLink>\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n\n          </Nav>\n        </Container>\n      </Navbar>\n      \n      {/* idea for a menu that can toggle visibility */}\n      {/* <div className=\"imposter-menu\">\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Container>\n            <Nav className=\"me-auto\">\n              <Nav.Link href=\"#perfectionist\">Perfectionist</Nav.Link>\n              <Nav.Link href=\"#superperson\">Superperson</Nav.Link>\n              <Nav.Link href=\"#genius\">Genius</Nav.Link>\n              <Nav.Link href=\"#soloist\">Soloist</Nav.Link>\n              <Nav.Link href=\"#expert\">Expert</Nav.Link>\n            </Nav>\n          </Container>\n        </Navbar>\n      </div> */}\n\n    </div>\n  )\n}\n\nexport default MenuBar;\n","function Type1() {\n  return(\n    <h1>This is Imposter Syndrome type 1 - Perfectionist!</h1>\n  )\n}\n\nexport default Type1;","function Type2() {\n  return(\n    <h1>This is Imposter Syndrome type 2 - Superhero!</h1>\n  )\n}\n\nexport default Type2;","function Type3() {\n  return(\n    <h1>This is Imposter Syndrome type 3 - Genius!</h1>\n  )\n}\n\nexport default Type3;","function Type4() {\n  return(\n    <h1>This is Imposter Syndrome type 4 - Soloist!</h1>\n  )\n}\n\nexport default Type4;","function Type5() {\n  return(\n    <h1>This is Imposter Syndrome type 5 - Expert!</h1>\n  )\n}\n\nexport default Type5;","import logo from './logo.svg';\nimport './App.css';\nimport MenuBar from './MenuBar.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Switch, Route } from 'react-router-dom';\nimport Type1 from './Type-1.js';\nimport Type2 from './Type-2.js';\nimport Type3 from './Type-3.js';\nimport Type4 from './Type-4.js';\nimport Type5 from './Type-5.js';\n\nfunction App() {\n  return (\n    <div>\n      <MenuBar />\n      <div>\n        <h1>\n          Mission Statement\n        </h1>\n        <p>\n          Imposter Syndrome describes feeling of not being qualified coupled with fear that everyone around you will find out that you are an 'imposter.' Our research suggests that this is common feeliing for many, particularly for female-identifying individuals pursuing a career in tech. Be Incredible seeks to help users explore their relationship with imposter syndrome and how they can  triumph over their related struggles.\n        </p>\n      </div>\n      <div>\n        <h1>\n          Quiz Overview\n        </h1>\n        <p>\n          Psychololigsts have determined that there are five main archetypes of imposter syndrome. Be Incredible includes a breif quiz to help you identify which (if any) of the types apply to you. Take this quiz to learn more about yourself, the experiences of others like you, aand what you can do to combat  imposter syndrome.\n        </p>\n        <p class='orange'>\n          Take the quiz here *link to survey*\n        </p>\n      </div>\n\n      <Switch>\n        <Route path=\"/type-1\"> <Type1 /> </Route>\n        <Route path=\"/type-2\"> <Type2 /> </Route>\n        <Route path=\"/type-3\"> <Type3 /> </Route>\n        <Route path=\"/type-4\"> <Type4 /> </Route>\n        <Route path=\"/type-5\"> <Type5 /> </Route>\n      </Switch>\n\n    </div>\n\n    /*<div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>*/\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}